{"ast":null,"code":"import axios from 'axios'; // const URL = 'https://api.openweathermap.org/data/2.5/forecast';\n// const API_KEY = '0935476700f34732922d7f91d44ce422';\n// export const ApiWeather = async (query) => {\n//     const { data } = await axios.get(URL, {\n//         params: {\n//             q: query,\n//             units: 'metric',\n//             APPID: API_KEY,\n//         }\n//     });\n//     return data;\n// }\n\nconst URL_PREVISAO = 'http://localhost:8000/api/buscaprevisao/';\nexport const Busca = async query => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"cidade\": query\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  const data = await fetch(URL_PREVISAO, requestOptions).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  }).then(result => {\n    return result;\n  }).catch(error => console.log('error', error));\n  return data;\n};\n_c = Busca;\n\nvar _c;\n\n$RefreshReg$(_c, \"Busca\");","map":{"version":3,"sources":["/home/rihck/Desktop/Projects/previsao_system_clima/previsao-front/src/api/ApiWeather.js"],"names":["axios","URL_PREVISAO","Busca","query","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","data","fetch","then","response","ok","json","result","catch","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,YAAY,GAAG,0CAArB;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAOC,KAAP,IAAiB;AAClC,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,MAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,cAAUN;AAAX,GAAf,CAAV;AAEA,MAAIO,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAER,SAFY;AAGrBS,IAAAA,IAAI,EAAEN,GAHe;AAIrBO,IAAAA,QAAQ,EAAE;AAJW,GAArB;AAOA,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAACf,YAAD,EAAeS,cAAf,CAAL,CAClBO,IADkB,CACZC,QAAD,IAAc;AAChB,QAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACd,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;AACF,GALgB,EAMlBH,IANkB,CAMZI,MAAD,IAAY;AAAE,WAAOA,MAAP;AAAe,GANhB,EAOlBC,KAPkB,CAOZC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAPG,CAAnB;AAQA,SAAOR,IAAP;AACH,CAtBM;KAAMb,K","sourcesContent":["import axios from 'axios';\n\n// const URL = 'https://api.openweathermap.org/data/2.5/forecast';\n// const API_KEY = '0935476700f34732922d7f91d44ce422';\n\n// export const ApiWeather = async (query) => {\n//     const { data } = await axios.get(URL, {\n//         params: {\n//             q: query,\n//             units: 'metric',\n//             APPID: API_KEY,\n//         }\n//     });\n\n//     return data;\n// }\n\nconst URL_PREVISAO = 'http://localhost:8000/api/buscaprevisao/'\n\nexport const Busca = async (query) => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\"cidade\": query});\n\n    var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n    };\n\n    const data = await fetch(URL_PREVISAO, requestOptions)\n    .then((response) => {\n        if(response.ok) {\n          return response.json();\n        } \n      })\n    .then((result) => { return result })\n    .catch(error => console.log('error', error));\n    return data\n}"]},"metadata":{},"sourceType":"module"}