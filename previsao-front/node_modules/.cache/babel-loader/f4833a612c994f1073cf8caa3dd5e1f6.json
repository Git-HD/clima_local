{"ast":null,"code":"import axios from 'axios';\nconst URL = 'https://api.openweathermap.org/data/2.5/forecast';\nconst API_KEY = '0935476700f34732922d7f91d44ce422';\nexport const ApiWeather = async query => {\n  const {\n    data\n  } = await axios.get(URL, {\n    params: {\n      q: query,\n      units: 'metric',\n      APPID: API_KEY\n    }\n  });\n  return data;\n};\n_c = ApiWeather;\nconst URL_PREVISAO = 'http://localhost:8000/api/buscaprevisao';\nexport const Busca = async query => {\n  var data = JSON.stringify({\n    \"cidade\": \"brasilia\"\n  });\n  var config = {\n    method: 'post',\n    url: 'localhost:8000/api/buscaprevisao/',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Access-Control-Allow-Origin\": \"*\"\n    },\n    data: data\n  }; // axios(config)\n\n  const {\n    dado\n  } = await axios(config);\n  return dado;\n};\n_c2 = Busca;\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nvar raw = JSON.stringify({\n  \"cidade\": \"brasilia\"\n});\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\nfetch(\"localhost:8000/api/buscaprevisao/\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ApiWeather\");\n$RefreshReg$(_c2, \"Busca\");","map":{"version":3,"sources":["/home/rihck/Desktop/Projects/previsao_system - Copia/previsao-front/src/api/ApiWeather.js"],"names":["axios","URL","API_KEY","ApiWeather","query","data","get","params","q","units","APPID","URL_PREVISAO","Busca","JSON","stringify","config","method","url","headers","dado","myHeaders","Headers","append","raw","requestOptions","body","redirect","fetch","then","response","text","result","console","log","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,kDAAZ;AACA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,KAAP,IAAiB;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,KAAK,CAACM,GAAN,CAAUL,GAAV,EAAe;AAClCM,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAEJ,KADC;AAEJK,MAAAA,KAAK,EAAE,QAFH;AAGJC,MAAAA,KAAK,EAAER;AAHH;AAD0B,GAAf,CAAvB;AAQA,SAAOG,IAAP;AACH,CAVM;KAAMF,U;AAYb,MAAMQ,YAAY,GAAG,yCAArB;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAOR,KAAP,IAAiB;AAElC,MAAIC,IAAI,GAAGQ,IAAI,CAACC,SAAL,CAAe;AAAC,cAAS;AAAV,GAAf,CAAX;AAEA,MAAIC,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,mCAFI;AAGTC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,qCAA+B;AAF1B,KAHA;AAOTb,IAAAA,IAAI,EAAGA;AAPE,GAAb,CAJkC,CAclC;;AAEA,QAAM;AAAEc,IAAAA;AAAF,MAAW,MAAMnB,KAAK,CAACe,MAAD,CAA5B;AAEA,SAAOI,IAAP;AAEH,CApBM;MAAMP,K;AAsBb,IAAIQ,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,IAAIC,GAAG,GAAGV,IAAI,CAACC,SAAL,CAAe;AAAC,YAAS;AAAV,CAAf,CAAV;AAEA,IAAIU,cAAc,GAAG;AACnBR,EAAAA,MAAM,EAAE,MADW;AAEnBE,EAAAA,OAAO,EAAEE,SAFU;AAGnBK,EAAAA,IAAI,EAAEF,GAHa;AAInBG,EAAAA,QAAQ,EAAE;AAJS,CAArB;AAOAC,KAAK,CAAC,mCAAD,EAAsCH,cAAtC,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFlB,EAGGG,KAHH,CAGSC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAHlB","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.openweathermap.org/data/2.5/forecast';\nconst API_KEY = '0935476700f34732922d7f91d44ce422';\n\nexport const ApiWeather = async (query) => {\n    const { data } = await axios.get(URL, {\n        params: {\n            q: query,\n            units: 'metric',\n            APPID: API_KEY,\n        }\n    });\n\n    return data;\n}\n\nconst URL_PREVISAO = 'http://localhost:8000/api/buscaprevisao'\n\nexport const Busca = async (query) => {\n    \n    var data = JSON.stringify({\"cidade\":\"brasilia\"});\n    \n    var config = {\n        method: 'post',\n        url: 'localhost:8000/api/buscaprevisao/',\n        headers: { \n            'Content-Type': 'application/json',\n            \"Access-Control-Allow-Origin\": \"*\"\n        },\n        data : data\n    };\n    \n    // axios(config)\n    \n    const { dado } = await axios(config);\n\n    return dado;\n\n}\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\"cidade\":\"brasilia\"});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"localhost:8000/api/buscaprevisao/\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"]},"metadata":{},"sourceType":"module"}